/**
* THIS FILE IS AUTOMATICALLY GENERATED BY src/node/config/scripts/generateNodeIndex.js
*
* @author d98762625 [d98762625@gmail.com]
* @copyright Crown Copyright 2019
* @license Apache-2.0
*/

/* eslint camelcase: 0 */


const NodeDish = require("./NodeDish.js")
const { _wrap, help, bake, _explainExcludedFunction } = require("./api.js")
const File = require("./File.js")
const { OperationError, DishError, ExcludedOperationError } = require("../core/errors/index.js")
const {
    // import as core_ to avoid name clashes after wrap.
    A1Z26CipherDecode: core_A1Z26CipherDecode,
    A1Z26CipherEncode: core_A1Z26CipherEncode,
    ADD: core_ADD,
    AESDecrypt: core_AESDecrypt,
    AESEncrypt: core_AESEncrypt,
    AESKeyUnwrap: core_AESKeyUnwrap,
    AESKeyWrap: core_AESKeyWrap,
    AMFDecode: core_AMFDecode,
    AMFEncode: core_AMFEncode,
    AND: core_AND,
    AddLineNumbers: core_AddLineNumbers,
    AddTextToImage: core_AddTextToImage,
    Adler32Checksum: core_Adler32Checksum,
    AffineCipherDecode: core_AffineCipherDecode,
    AffineCipherEncode: core_AffineCipherEncode,
    AnalyseHash: core_AnalyseHash,
    Argon2: core_Argon2,
    Argon2Compare: core_Argon2Compare,
    AtbashCipher: core_AtbashCipher,
    AvroToJSON: core_AvroToJSON,
    BLAKE2b: core_BLAKE2b,
    BLAKE2s: core_BLAKE2s,
    BSONDeserialise: core_BSONDeserialise,
    BSONSerialise: core_BSONSerialise,
    BaconCipherDecode: core_BaconCipherDecode,
    BaconCipherEncode: core_BaconCipherEncode,
    Bcrypt: core_Bcrypt,
    BcryptCompare: core_BcryptCompare,
    BcryptParse: core_BcryptParse,
    BifidCipherDecode: core_BifidCipherDecode,
    BifidCipherEncode: core_BifidCipherEncode,
    BitShiftLeft: core_BitShiftLeft,
    BitShiftRight: core_BitShiftRight,
    BlowfishDecrypt: core_BlowfishDecrypt,
    BlowfishEncrypt: core_BlowfishEncrypt,
    BlurImage: core_BlurImage,
    Bombe: core_Bombe,
    Bzip2Compress: core_Bzip2Compress,
    Bzip2Decompress: core_Bzip2Decompress,
    CBORDecode: core_CBORDecode,
    CBOREncode: core_CBOREncode,
    CMAC: core_CMAC,
    CRC16Checksum: core_CRC16Checksum,
    CRC32Checksum: core_CRC32Checksum,
    CRC8Checksum: core_CRC8Checksum,
    CSSBeautify: core_CSSBeautify,
    CSSMinify: core_CSSMinify,
    CSSSelector: core_CSSSelector,
    CSVToJSON: core_CSVToJSON,
    CTPH: core_CTPH,
    CaesarBoxCipher: core_CaesarBoxCipher,
    CartesianProduct: core_CartesianProduct,
    CetaceanCipherDecode: core_CetaceanCipherDecode,
    CetaceanCipherEncode: core_CetaceanCipherEncode,
    ChaCha: core_ChaCha,
    ChangeIPFormat: core_ChangeIPFormat,
    ChiSquare: core_ChiSquare,
    CipherSaber2Decrypt: core_CipherSaber2Decrypt,
    CipherSaber2Encrypt: core_CipherSaber2Encrypt,
    CitrixCTX1Decode: core_CitrixCTX1Decode,
    CitrixCTX1Encode: core_CitrixCTX1Encode,
    Colossus: core_Colossus,
    CompareCTPHHashes: core_CompareCTPHHashes,
    CompareSSDEEPHashes: core_CompareSSDEEPHashes,
    ContainImage: core_ContainImage,
    ConvertArea: core_ConvertArea,
    ConvertCoordinateFormat: core_ConvertCoordinateFormat,
    ConvertDataUnits: core_ConvertDataUnits,
    ConvertDistance: core_ConvertDistance,
    ConvertImageFormat: core_ConvertImageFormat,
    ConvertMass: core_ConvertMass,
    ConvertSpeed: core_ConvertSpeed,
    ConvertToNATOAlphabet: core_ConvertToNATOAlphabet,
    CountOccurrences: core_CountOccurrences,
    CoverImage: core_CoverImage,
    CropImage: core_CropImage,
    DESDecrypt: core_DESDecrypt,
    DESEncrypt: core_DESEncrypt,
    DNSOverHTTPS: core_DNSOverHTTPS,
    DechunkHTTPResponse: core_DechunkHTTPResponse,
    DecodeNetBIOSName: core_DecodeNetBIOSName,
    DecodeText: core_DecodeText,
    DefangIPAddresses: core_DefangIPAddresses,
    DefangURL: core_DefangURL,
    DeriveEVPKey: core_DeriveEVPKey,
    DeriveHKDFKey: core_DeriveHKDFKey,
    DerivePBKDF2Key: core_DerivePBKDF2Key,
    DetectFileType: core_DetectFileType,
    Diff: core_Diff,
    DisassembleX86: core_DisassembleX86,
    DitherImage: core_DitherImage,
    Divide: core_Divide,
    DropBytes: core_DropBytes,
    ELFInfo: core_ELFInfo,
    EncodeNetBIOSName: core_EncodeNetBIOSName,
    EncodeText: core_EncodeText,
    Enigma: core_Enigma,
    Entropy: core_Entropy,
    EscapeString: core_EscapeString,
    EscapeUnicodeCharacters: core_EscapeUnicodeCharacters,
    ExpandAlphabetRange: core_ExpandAlphabetRange,
    ExtractDates: core_ExtractDates,
    ExtractDomains: core_ExtractDomains,
    ExtractEXIF: core_ExtractEXIF,
    ExtractEmailAddresses: core_ExtractEmailAddresses,
    ExtractFilePaths: core_ExtractFilePaths,
    ExtractFiles: core_ExtractFiles,
    ExtractID3: core_ExtractID3,
    ExtractIPAddresses: core_ExtractIPAddresses,
    ExtractLSB: core_ExtractLSB,
    ExtractMACAddresses: core_ExtractMACAddresses,
    ExtractRGBA: core_ExtractRGBA,
    ExtractURLs: core_ExtractURLs,
    Filter: core_Filter,
    FindReplace: core_FindReplace,
    Fletcher16Checksum: core_Fletcher16Checksum,
    Fletcher32Checksum: core_Fletcher32Checksum,
    Fletcher64Checksum: core_Fletcher64Checksum,
    Fletcher8Checksum: core_Fletcher8Checksum,
    FlipImage: core_FlipImage,
    FormatMACAddresses: core_FormatMACAddresses,
    FrequencyDistribution: core_FrequencyDistribution,
    FromBCD: core_FromBCD,
    FromBase: core_FromBase,
    FromBase32: core_FromBase32,
    FromBase45: core_FromBase45,
    FromBase58: core_FromBase58,
    FromBase62: core_FromBase62,
    FromBase64: core_FromBase64,
    FromBase85: core_FromBase85,
    FromBinary: core_FromBinary,
    FromBraille: core_FromBraille,
    FromCaseInsensitiveRegex: core_FromCaseInsensitiveRegex,
    FromCharcode: core_FromCharcode,
    FromDecimal: core_FromDecimal,
    FromHTMLEntity: core_FromHTMLEntity,
    FromHex: core_FromHex,
    FromHexContent: core_FromHexContent,
    FromHexdump: core_FromHexdump,
    FromMessagePack: core_FromMessagePack,
    FromMorseCode: core_FromMorseCode,
    FromOctal: core_FromOctal,
    FromPunycode: core_FromPunycode,
    FromQuotedPrintable: core_FromQuotedPrintable,
    FromUNIXTimestamp: core_FromUNIXTimestamp,
    FuzzyMatch: core_FuzzyMatch,
    GOSTHash: core_GOSTHash,
    GenerateAllHashes: core_GenerateAllHashes,
    GenerateDeBruijnSequence: core_GenerateDeBruijnSequence,
    GenerateHOTP: core_GenerateHOTP,
    GenerateImage: core_GenerateImage,
    GenerateLoremIpsum: core_GenerateLoremIpsum,
    GeneratePGPKeyPair: core_GeneratePGPKeyPair,
    GenerateQRCode: core_GenerateQRCode,
    GenerateRSAKeyPair: core_GenerateRSAKeyPair,
    GenerateTOTP: core_GenerateTOTP,
    GenerateUUID: core_GenerateUUID,
    GenericCodeBeautify: core_GenericCodeBeautify,
    GetAllCasings: core_GetAllCasings,
    GetTime: core_GetTime,
    GroupIPAddresses: core_GroupIPAddresses,
    Gunzip: core_Gunzip,
    Gzip: core_Gzip,
    HAS160: core_HAS160,
    HASSHClientFingerprint: core_HASSHClientFingerprint,
    HASSHServerFingerprint: core_HASSHServerFingerprint,
    HMAC: core_HMAC,
    HTMLToText: core_HTMLToText,
    HTTPRequest: core_HTTPRequest,
    HammingDistance: core_HammingDistance,
    HaversineDistance: core_HaversineDistance,
    Head: core_Head,
    HeatmapChart: core_HeatmapChart,
    HexDensityChart: core_HexDensityChart,
    HexToObjectIdentifier: core_HexToObjectIdentifier,
    HexToPEM: core_HexToPEM,
    ImageBrightnessContrast: core_ImageBrightnessContrast,
    ImageFilter: core_ImageFilter,
    ImageHueSaturationLightness: core_ImageHueSaturationLightness,
    ImageOpacity: core_ImageOpacity,
    IndexOfCoincidence: core_IndexOfCoincidence,
    InvertImage: core_InvertImage,
    JA3Fingerprint: core_JA3Fingerprint,
    JA3SFingerprint: core_JA3SFingerprint,
    JPathExpression: core_JPathExpression,
    JSONBeautify: core_JSONBeautify,
    JSONMinify: core_JSONMinify,
    JSONToCSV: core_JSONToCSV,
    JWTDecode: core_JWTDecode,
    JWTSign: core_JWTSign,
    JWTVerify: core_JWTVerify,
    Keccak: core_Keccak,
    LMHash: core_LMHash,
    LS47Decrypt: core_LS47Decrypt,
    LS47Encrypt: core_LS47Encrypt,
    LZ4Compress: core_LZ4Compress,
    LZ4Decompress: core_LZ4Decompress,
    LZMACompress: core_LZMACompress,
    LZMADecompress: core_LZMADecompress,
    LZStringCompress: core_LZStringCompress,
    LZStringDecompress: core_LZStringDecompress,
    LevenshteinDistance: core_LevenshteinDistance,
    Lorenz: core_Lorenz,
    LuhnChecksum: core_LuhnChecksum,
    MD2: core_MD2,
    MD4: core_MD4,
    MD5: core_MD5,
    MD6: core_MD6,
    Magic: core_Magic,
    Mean: core_Mean,
    Median: core_Median,
    MicrosoftScriptDecoder: core_MicrosoftScriptDecoder,
    MultipleBombe: core_MultipleBombe,
    Multiply: core_Multiply,
    NOT: core_NOT,
    NTHash: core_NTHash,
    NormaliseImage: core_NormaliseImage,
    NormaliseUnicode: core_NormaliseUnicode,
    Numberwang: core_Numberwang,
    OR: core_OR,
    ObjectIdentifierToHex: core_ObjectIdentifierToHex,
    OffsetChecker: core_OffsetChecker,
    OpticalCharacterRecognition: core_OpticalCharacterRecognition,
    PEMToHex: core_PEMToHex,
    PGPDecrypt: core_PGPDecrypt,
    PGPDecryptAndVerify: core_PGPDecryptAndVerify,
    PGPEncrypt: core_PGPEncrypt,
    PGPEncryptAndSign: core_PGPEncryptAndSign,
    PGPVerify: core_PGPVerify,
    PHPDeserialize: core_PHPDeserialize,
    PLISTViewer: core_PLISTViewer,
    PadLines: core_PadLines,
    ParseASN1HexString: core_ParseASN1HexString,
    ParseColourCode: core_ParseColourCode,
    ParseDateTime: core_ParseDateTime,
    ParseIPRange: core_ParseIPRange,
    ParseIPv4Header: core_ParseIPv4Header,
    ParseIPv6Address: core_ParseIPv6Address,
    ParseObjectIDTimestamp: core_ParseObjectIDTimestamp,
    ParseQRCode: core_ParseQRCode,
    ParseSSHHostKey: core_ParseSSHHostKey,
    ParseTCP: core_ParseTCP,
    ParseTLV: core_ParseTLV,
    ParseUDP: core_ParseUDP,
    ParseUNIXFilePermissions: core_ParseUNIXFilePermissions,
    ParseURI: core_ParseURI,
    ParseUserAgent: core_ParseUserAgent,
    ParseX509Certificate: core_ParseX509Certificate,
    PlayMedia: core_PlayMedia,
    PowerSet: core_PowerSet,
    ProtobufDecode: core_ProtobufDecode,
    ProtobufEncode: core_ProtobufEncode,
    PseudoRandomNumberGenerator: core_PseudoRandomNumberGenerator,
    RC2Decrypt: core_RC2Decrypt,
    RC2Encrypt: core_RC2Encrypt,
    RC4: core_RC4,
    RC4Drop: core_RC4Drop,
    RIPEMD: core_RIPEMD,
    ROT13: core_ROT13,
    ROT13BruteForce: core_ROT13BruteForce,
    ROT47: core_ROT47,
    ROT47BruteForce: core_ROT47BruteForce,
    ROT8000: core_ROT8000,
    RSADecrypt: core_RSADecrypt,
    RSAEncrypt: core_RSAEncrypt,
    RSASign: core_RSASign,
    RSAVerify: core_RSAVerify,
    Rabbit: core_Rabbit,
    RailFenceCipherDecode: core_RailFenceCipherDecode,
    RailFenceCipherEncode: core_RailFenceCipherEncode,
    RandomizeColourPalette: core_RandomizeColourPalette,
    RawDeflate: core_RawDeflate,
    RawInflate: core_RawInflate,
    Register: core_Register,
    RegularExpression: core_RegularExpression,
    RemoveDiacritics: core_RemoveDiacritics,
    RemoveEXIF: core_RemoveEXIF,
    RemoveLineNumbers: core_RemoveLineNumbers,
    RemoveNullBytes: core_RemoveNullBytes,
    RemoveWhitespace: core_RemoveWhitespace,
    RenderImage: core_RenderImage,
    RenderMarkdown: core_RenderMarkdown,
    ResizeImage: core_ResizeImage,
    Return: core_Return,
    Reverse: core_Reverse,
    RotateImage: core_RotateImage,
    RotateLeft: core_RotateLeft,
    RotateRight: core_RotateRight,
    SHA0: core_SHA0,
    SHA1: core_SHA1,
    SHA2: core_SHA2,
    SHA3: core_SHA3,
    SIGABA: core_SIGABA,
    SM3: core_SM3,
    SM4Decrypt: core_SM4Decrypt,
    SM4Encrypt: core_SM4Encrypt,
    SQLBeautify: core_SQLBeautify,
    SQLMinify: core_SQLMinify,
    SSDEEP: core_SSDEEP,
    SUB: core_SUB,
    ScanForEmbeddedFiles: core_ScanForEmbeddedFiles,
    ScatterChart: core_ScatterChart,
    Scrypt: core_Scrypt,
    SeriesChart: core_SeriesChart,
    SetDifference: core_SetDifference,
    SetIntersection: core_SetIntersection,
    SetUnion: core_SetUnion,
    Shake: core_Shake,
    SharpenImage: core_SharpenImage,
    ShowBase64Offsets: core_ShowBase64Offsets,
    ShowOnMap: core_ShowOnMap,
    Shuffle: core_Shuffle,
    Sleep: core_Sleep,
    Snefru: core_Snefru,
    Sort: core_Sort,
    Split: core_Split,
    SplitColourChannels: core_SplitColourChannels,
    StandardDeviation: core_StandardDeviation,
    Streebog: core_Streebog,
    Strings: core_Strings,
    StripHTMLTags: core_StripHTMLTags,
    StripHTTPHeaders: core_StripHTTPHeaders,
    Subsection: core_Subsection,
    Substitute: core_Substitute,
    Subtract: core_Subtract,
    Sum: core_Sum,
    SwapCase: core_SwapCase,
    SwapEndianness: core_SwapEndianness,
    SymmetricDifference: core_SymmetricDifference,
    TCPIPChecksum: core_TCPIPChecksum,
    Tail: core_Tail,
    TakeBytes: core_TakeBytes,
    Tar: core_Tar,
    TextEncodingBruteForce: core_TextEncodingBruteForce,
    ToBCD: core_ToBCD,
    ToBase: core_ToBase,
    ToBase32: core_ToBase32,
    ToBase45: core_ToBase45,
    ToBase58: core_ToBase58,
    ToBase62: core_ToBase62,
    ToBase64: core_ToBase64,
    ToBase85: core_ToBase85,
    ToBinary: core_ToBinary,
    ToBraille: core_ToBraille,
    ToCamelCase: core_ToCamelCase,
    ToCaseInsensitiveRegex: core_ToCaseInsensitiveRegex,
    ToCharcode: core_ToCharcode,
    ToDecimal: core_ToDecimal,
    ToHTMLEntity: core_ToHTMLEntity,
    ToHex: core_ToHex,
    ToHexContent: core_ToHexContent,
    ToHexdump: core_ToHexdump,
    ToKebabCase: core_ToKebabCase,
    ToLowerCase: core_ToLowerCase,
    ToMessagePack: core_ToMessagePack,
    ToMorseCode: core_ToMorseCode,
    ToOctal: core_ToOctal,
    ToPunycode: core_ToPunycode,
    ToQuotedPrintable: core_ToQuotedPrintable,
    ToSnakeCase: core_ToSnakeCase,
    ToTable: core_ToTable,
    ToUNIXTimestamp: core_ToUNIXTimestamp,
    ToUpperCase: core_ToUpperCase,
    TranslateDateTimeFormat: core_TranslateDateTimeFormat,
    TripleDESDecrypt: core_TripleDESDecrypt,
    TripleDESEncrypt: core_TripleDESEncrypt,
    Typex: core_Typex,
    UNIXTimestampToWindowsFiletime: core_UNIXTimestampToWindowsFiletime,
    URLDecode: core_URLDecode,
    URLEncode: core_URLEncode,
    UnescapeString: core_UnescapeString,
    UnescapeUnicodeCharacters: core_UnescapeUnicodeCharacters,
    UnicodeTextFormat: core_UnicodeTextFormat,
    Unique: core_Unique,
    Untar: core_Untar,
    Unzip: core_Unzip,
    VarIntDecode: core_VarIntDecode,
    VarIntEncode: core_VarIntEncode,
    ViewBitPlane: core_ViewBitPlane,
    VigenèreDecode: core_VigenèreDecode,
    VigenèreEncode: core_VigenèreEncode,
    Whirlpool: core_Whirlpool,
    WindowsFiletimeToUNIXTimestamp: core_WindowsFiletimeToUNIXTimestamp,
    XKCDRandomNumber: core_XKCDRandomNumber,
    XMLBeautify: core_XMLBeautify,
    XMLMinify: core_XMLMinify,
    XOR: core_XOR,
    XORBruteForce: core_XORBruteForce,
    XPathExpression: core_XPathExpression,
    YARARules: core_YARARules,
    Zip: core_Zip,
    ZlibDeflate: core_ZlibDeflate,
    ZlibInflate: core_ZlibInflate,

} = require("../core/operations/index.js");

global.File = File;

/**
 * generateChef
 *
 * Creates decapitalised, wrapped ops in chef object for default export.
 */
function generateChef() {
    return {
        "A1Z26CipherDecode": _wrap(core_A1Z26CipherDecode),
        "A1Z26CipherEncode": _wrap(core_A1Z26CipherEncode),
        "ADD": _wrap(core_ADD),
        "AESDecrypt": _wrap(core_AESDecrypt),
        "AESEncrypt": _wrap(core_AESEncrypt),
        "AESKeyUnwrap": _wrap(core_AESKeyUnwrap),
        "AESKeyWrap": _wrap(core_AESKeyWrap),
        "AMFDecode": _wrap(core_AMFDecode),
        "AMFEncode": _wrap(core_AMFEncode),
        "AND": _wrap(core_AND),
        "addLineNumbers": _wrap(core_AddLineNumbers),
        "addTextToImage": _wrap(core_AddTextToImage),
        "adler32Checksum": _wrap(core_Adler32Checksum),
        "affineCipherDecode": _wrap(core_AffineCipherDecode),
        "affineCipherEncode": _wrap(core_AffineCipherEncode),
        "analyseHash": _wrap(core_AnalyseHash),
        "argon2": _wrap(core_Argon2),
        "argon2Compare": _wrap(core_Argon2Compare),
        "atbashCipher": _wrap(core_AtbashCipher),
        "avroToJSON": _wrap(core_AvroToJSON),
        "BLAKE2b": _wrap(core_BLAKE2b),
        "BLAKE2s": _wrap(core_BLAKE2s),
        "BSONDeserialise": _wrap(core_BSONDeserialise),
        "BSONSerialise": _wrap(core_BSONSerialise),
        "baconCipherDecode": _wrap(core_BaconCipherDecode),
        "baconCipherEncode": _wrap(core_BaconCipherEncode),
        "bcrypt": _wrap(core_Bcrypt),
        "bcryptCompare": _wrap(core_BcryptCompare),
        "bcryptParse": _wrap(core_BcryptParse),
        "bifidCipherDecode": _wrap(core_BifidCipherDecode),
        "bifidCipherEncode": _wrap(core_BifidCipherEncode),
        "bitShiftLeft": _wrap(core_BitShiftLeft),
        "bitShiftRight": _wrap(core_BitShiftRight),
        "blowfishDecrypt": _wrap(core_BlowfishDecrypt),
        "blowfishEncrypt": _wrap(core_BlowfishEncrypt),
        "blurImage": _wrap(core_BlurImage),
        "bombe": _wrap(core_Bombe),
        "bzip2Compress": _wrap(core_Bzip2Compress),
        "bzip2Decompress": _wrap(core_Bzip2Decompress),
        "CBORDecode": _wrap(core_CBORDecode),
        "CBOREncode": _wrap(core_CBOREncode),
        "CMAC": _wrap(core_CMAC),
        "CRC16Checksum": _wrap(core_CRC16Checksum),
        "CRC32Checksum": _wrap(core_CRC32Checksum),
        "CRC8Checksum": _wrap(core_CRC8Checksum),
        "CSSBeautify": _wrap(core_CSSBeautify),
        "CSSMinify": _wrap(core_CSSMinify),
        "CSSSelector": _wrap(core_CSSSelector),
        "CSVToJSON": _wrap(core_CSVToJSON),
        "CTPH": _wrap(core_CTPH),
        "caesarBoxCipher": _wrap(core_CaesarBoxCipher),
        "cartesianProduct": _wrap(core_CartesianProduct),
        "cetaceanCipherDecode": _wrap(core_CetaceanCipherDecode),
        "cetaceanCipherEncode": _wrap(core_CetaceanCipherEncode),
        "chaCha": _wrap(core_ChaCha),
        "changeIPFormat": _wrap(core_ChangeIPFormat),
        "chiSquare": _wrap(core_ChiSquare),
        "cipherSaber2Decrypt": _wrap(core_CipherSaber2Decrypt),
        "cipherSaber2Encrypt": _wrap(core_CipherSaber2Encrypt),
        "citrixCTX1Decode": _wrap(core_CitrixCTX1Decode),
        "citrixCTX1Encode": _wrap(core_CitrixCTX1Encode),
        "colossus": _wrap(core_Colossus),
        "compareCTPHHashes": _wrap(core_CompareCTPHHashes),
        "compareSSDEEPHashes": _wrap(core_CompareSSDEEPHashes),
        "containImage": _wrap(core_ContainImage),
        "convertArea": _wrap(core_ConvertArea),
        "convertCoordinateFormat": _wrap(core_ConvertCoordinateFormat),
        "convertDataUnits": _wrap(core_ConvertDataUnits),
        "convertDistance": _wrap(core_ConvertDistance),
        "convertImageFormat": _wrap(core_ConvertImageFormat),
        "convertMass": _wrap(core_ConvertMass),
        "convertSpeed": _wrap(core_ConvertSpeed),
        "convertToNATOAlphabet": _wrap(core_ConvertToNATOAlphabet),
        "countOccurrences": _wrap(core_CountOccurrences),
        "coverImage": _wrap(core_CoverImage),
        "cropImage": _wrap(core_CropImage),
        "DESDecrypt": _wrap(core_DESDecrypt),
        "DESEncrypt": _wrap(core_DESEncrypt),
        "DNSOverHTTPS": _wrap(core_DNSOverHTTPS),
        "dechunkHTTPResponse": _wrap(core_DechunkHTTPResponse),
        "decodeNetBIOSName": _wrap(core_DecodeNetBIOSName),
        "decodeText": _wrap(core_DecodeText),
        "defangIPAddresses": _wrap(core_DefangIPAddresses),
        "defangURL": _wrap(core_DefangURL),
        "deriveEVPKey": _wrap(core_DeriveEVPKey),
        "deriveHKDFKey": _wrap(core_DeriveHKDFKey),
        "derivePBKDF2Key": _wrap(core_DerivePBKDF2Key),
        "detectFileType": _wrap(core_DetectFileType),
        "diff": _wrap(core_Diff),
        "disassembleX86": _wrap(core_DisassembleX86),
        "ditherImage": _wrap(core_DitherImage),
        "divide": _wrap(core_Divide),
        "dropBytes": _wrap(core_DropBytes),
        "ELFInfo": _wrap(core_ELFInfo),
        "encodeNetBIOSName": _wrap(core_EncodeNetBIOSName),
        "encodeText": _wrap(core_EncodeText),
        "enigma": _wrap(core_Enigma),
        "entropy": _wrap(core_Entropy),
        "escapeString": _wrap(core_EscapeString),
        "escapeUnicodeCharacters": _wrap(core_EscapeUnicodeCharacters),
        "expandAlphabetRange": _wrap(core_ExpandAlphabetRange),
        "extractDates": _wrap(core_ExtractDates),
        "extractDomains": _wrap(core_ExtractDomains),
        "extractEXIF": _wrap(core_ExtractEXIF),
        "extractEmailAddresses": _wrap(core_ExtractEmailAddresses),
        "extractFilePaths": _wrap(core_ExtractFilePaths),
        "extractFiles": _wrap(core_ExtractFiles),
        "extractID3": _wrap(core_ExtractID3),
        "extractIPAddresses": _wrap(core_ExtractIPAddresses),
        "extractLSB": _wrap(core_ExtractLSB),
        "extractMACAddresses": _wrap(core_ExtractMACAddresses),
        "extractRGBA": _wrap(core_ExtractRGBA),
        "extractURLs": _wrap(core_ExtractURLs),
        "filter": _wrap(core_Filter),
        "findReplace": _wrap(core_FindReplace),
        "fletcher16Checksum": _wrap(core_Fletcher16Checksum),
        "fletcher32Checksum": _wrap(core_Fletcher32Checksum),
        "fletcher64Checksum": _wrap(core_Fletcher64Checksum),
        "fletcher8Checksum": _wrap(core_Fletcher8Checksum),
        "flipImage": _wrap(core_FlipImage),
        "formatMACAddresses": _wrap(core_FormatMACAddresses),
        "frequencyDistribution": _wrap(core_FrequencyDistribution),
        "fromBCD": _wrap(core_FromBCD),
        "fromBase": _wrap(core_FromBase),
        "fromBase32": _wrap(core_FromBase32),
        "fromBase45": _wrap(core_FromBase45),
        "fromBase58": _wrap(core_FromBase58),
        "fromBase62": _wrap(core_FromBase62),
        "fromBase64": _wrap(core_FromBase64),
        "fromBase85": _wrap(core_FromBase85),
        "fromBinary": _wrap(core_FromBinary),
        "fromBraille": _wrap(core_FromBraille),
        "fromCaseInsensitiveRegex": _wrap(core_FromCaseInsensitiveRegex),
        "fromCharcode": _wrap(core_FromCharcode),
        "fromDecimal": _wrap(core_FromDecimal),
        "fromHTMLEntity": _wrap(core_FromHTMLEntity),
        "fromHex": _wrap(core_FromHex),
        "fromHexContent": _wrap(core_FromHexContent),
        "fromHexdump": _wrap(core_FromHexdump),
        "fromMessagePack": _wrap(core_FromMessagePack),
        "fromMorseCode": _wrap(core_FromMorseCode),
        "fromOctal": _wrap(core_FromOctal),
        "fromPunycode": _wrap(core_FromPunycode),
        "fromQuotedPrintable": _wrap(core_FromQuotedPrintable),
        "fromUNIXTimestamp": _wrap(core_FromUNIXTimestamp),
        "fuzzyMatch": _wrap(core_FuzzyMatch),
        "GOSTHash": _wrap(core_GOSTHash),
        "generateAllHashes": _wrap(core_GenerateAllHashes),
        "generateDeBruijnSequence": _wrap(core_GenerateDeBruijnSequence),
        "generateHOTP": _wrap(core_GenerateHOTP),
        "generateImage": _wrap(core_GenerateImage),
        "generateLoremIpsum": _wrap(core_GenerateLoremIpsum),
        "generatePGPKeyPair": _wrap(core_GeneratePGPKeyPair),
        "generateQRCode": _wrap(core_GenerateQRCode),
        "generateRSAKeyPair": _wrap(core_GenerateRSAKeyPair),
        "generateTOTP": _wrap(core_GenerateTOTP),
        "generateUUID": _wrap(core_GenerateUUID),
        "genericCodeBeautify": _wrap(core_GenericCodeBeautify),
        "getAllCasings": _wrap(core_GetAllCasings),
        "getTime": _wrap(core_GetTime),
        "groupIPAddresses": _wrap(core_GroupIPAddresses),
        "gunzip": _wrap(core_Gunzip),
        "gzip": _wrap(core_Gzip),
        "HAS160": _wrap(core_HAS160),
        "HASSHClientFingerprint": _wrap(core_HASSHClientFingerprint),
        "HASSHServerFingerprint": _wrap(core_HASSHServerFingerprint),
        "HMAC": _wrap(core_HMAC),
        "HTMLToText": _wrap(core_HTMLToText),
        "HTTPRequest": _wrap(core_HTTPRequest),
        "hammingDistance": _wrap(core_HammingDistance),
        "haversineDistance": _wrap(core_HaversineDistance),
        "head": _wrap(core_Head),
        "heatmapChart": _wrap(core_HeatmapChart),
        "hexDensityChart": _wrap(core_HexDensityChart),
        "hexToObjectIdentifier": _wrap(core_HexToObjectIdentifier),
        "hexToPEM": _wrap(core_HexToPEM),
        "imageBrightnessContrast": _wrap(core_ImageBrightnessContrast),
        "imageFilter": _wrap(core_ImageFilter),
        "imageHueSaturationLightness": _wrap(core_ImageHueSaturationLightness),
        "imageOpacity": _wrap(core_ImageOpacity),
        "indexOfCoincidence": _wrap(core_IndexOfCoincidence),
        "invertImage": _wrap(core_InvertImage),
        "JA3Fingerprint": _wrap(core_JA3Fingerprint),
        "JA3SFingerprint": _wrap(core_JA3SFingerprint),
        "JPathExpression": _wrap(core_JPathExpression),
        "JSONBeautify": _wrap(core_JSONBeautify),
        "JSONMinify": _wrap(core_JSONMinify),
        "JSONToCSV": _wrap(core_JSONToCSV),
        "JWTDecode": _wrap(core_JWTDecode),
        "JWTSign": _wrap(core_JWTSign),
        "JWTVerify": _wrap(core_JWTVerify),
        "keccak": _wrap(core_Keccak),
        "LMHash": _wrap(core_LMHash),
        "LS47Decrypt": _wrap(core_LS47Decrypt),
        "LS47Encrypt": _wrap(core_LS47Encrypt),
        "LZ4Compress": _wrap(core_LZ4Compress),
        "LZ4Decompress": _wrap(core_LZ4Decompress),
        "LZMACompress": _wrap(core_LZMACompress),
        "LZMADecompress": _wrap(core_LZMADecompress),
        "LZStringCompress": _wrap(core_LZStringCompress),
        "LZStringDecompress": _wrap(core_LZStringDecompress),
        "levenshteinDistance": _wrap(core_LevenshteinDistance),
        "lorenz": _wrap(core_Lorenz),
        "luhnChecksum": _wrap(core_LuhnChecksum),
        "MD2": _wrap(core_MD2),
        "MD4": _wrap(core_MD4),
        "MD5": _wrap(core_MD5),
        "MD6": _wrap(core_MD6),
        "magic": _wrap(core_Magic),
        "mean": _wrap(core_Mean),
        "median": _wrap(core_Median),
        "microsoftScriptDecoder": _wrap(core_MicrosoftScriptDecoder),
        "multipleBombe": _wrap(core_MultipleBombe),
        "multiply": _wrap(core_Multiply),
        "NOT": _wrap(core_NOT),
        "NTHash": _wrap(core_NTHash),
        "normaliseImage": _wrap(core_NormaliseImage),
        "normaliseUnicode": _wrap(core_NormaliseUnicode),
        "numberwang": _wrap(core_Numberwang),
        "OR": _wrap(core_OR),
        "objectIdentifierToHex": _wrap(core_ObjectIdentifierToHex),
        "offsetChecker": _wrap(core_OffsetChecker),
        "opticalCharacterRecognition": _wrap(core_OpticalCharacterRecognition),
        "PEMToHex": _wrap(core_PEMToHex),
        "PGPDecrypt": _wrap(core_PGPDecrypt),
        "PGPDecryptAndVerify": _wrap(core_PGPDecryptAndVerify),
        "PGPEncrypt": _wrap(core_PGPEncrypt),
        "PGPEncryptAndSign": _wrap(core_PGPEncryptAndSign),
        "PGPVerify": _wrap(core_PGPVerify),
        "PHPDeserialize": _wrap(core_PHPDeserialize),
        "PLISTViewer": _wrap(core_PLISTViewer),
        "padLines": _wrap(core_PadLines),
        "parseASN1HexString": _wrap(core_ParseASN1HexString),
        "parseColourCode": _wrap(core_ParseColourCode),
        "parseDateTime": _wrap(core_ParseDateTime),
        "parseIPRange": _wrap(core_ParseIPRange),
        "parseIPv4Header": _wrap(core_ParseIPv4Header),
        "parseIPv6Address": _wrap(core_ParseIPv6Address),
        "parseObjectIDTimestamp": _wrap(core_ParseObjectIDTimestamp),
        "parseQRCode": _wrap(core_ParseQRCode),
        "parseSSHHostKey": _wrap(core_ParseSSHHostKey),
        "parseTCP": _wrap(core_ParseTCP),
        "parseTLV": _wrap(core_ParseTLV),
        "parseUDP": _wrap(core_ParseUDP),
        "parseUNIXFilePermissions": _wrap(core_ParseUNIXFilePermissions),
        "parseURI": _wrap(core_ParseURI),
        "parseUserAgent": _wrap(core_ParseUserAgent),
        "parseX509Certificate": _wrap(core_ParseX509Certificate),
        "playMedia": _wrap(core_PlayMedia),
        "powerSet": _wrap(core_PowerSet),
        "protobufDecode": _wrap(core_ProtobufDecode),
        "protobufEncode": _wrap(core_ProtobufEncode),
        "pseudoRandomNumberGenerator": _wrap(core_PseudoRandomNumberGenerator),
        "RC2Decrypt": _wrap(core_RC2Decrypt),
        "RC2Encrypt": _wrap(core_RC2Encrypt),
        "RC4": _wrap(core_RC4),
        "RC4Drop": _wrap(core_RC4Drop),
        "RIPEMD": _wrap(core_RIPEMD),
        "ROT13": _wrap(core_ROT13),
        "ROT13BruteForce": _wrap(core_ROT13BruteForce),
        "ROT47": _wrap(core_ROT47),
        "ROT47BruteForce": _wrap(core_ROT47BruteForce),
        "ROT8000": _wrap(core_ROT8000),
        "RSADecrypt": _wrap(core_RSADecrypt),
        "RSAEncrypt": _wrap(core_RSAEncrypt),
        "RSASign": _wrap(core_RSASign),
        "RSAVerify": _wrap(core_RSAVerify),
        "rabbit": _wrap(core_Rabbit),
        "railFenceCipherDecode": _wrap(core_RailFenceCipherDecode),
        "railFenceCipherEncode": _wrap(core_RailFenceCipherEncode),
        "randomizeColourPalette": _wrap(core_RandomizeColourPalette),
        "rawDeflate": _wrap(core_RawDeflate),
        "rawInflate": _wrap(core_RawInflate),
        "register": _wrap(core_Register),
        "regularExpression": _wrap(core_RegularExpression),
        "removeDiacritics": _wrap(core_RemoveDiacritics),
        "removeEXIF": _wrap(core_RemoveEXIF),
        "removeLineNumbers": _wrap(core_RemoveLineNumbers),
        "removeNullBytes": _wrap(core_RemoveNullBytes),
        "removeWhitespace": _wrap(core_RemoveWhitespace),
        "renderImage": _wrap(core_RenderImage),
        "renderMarkdown": _wrap(core_RenderMarkdown),
        "resizeImage": _wrap(core_ResizeImage),
        "Return": _wrap(core_Return),
        "reverse": _wrap(core_Reverse),
        "rotateImage": _wrap(core_RotateImage),
        "rotateLeft": _wrap(core_RotateLeft),
        "rotateRight": _wrap(core_RotateRight),
        "SHA0": _wrap(core_SHA0),
        "SHA1": _wrap(core_SHA1),
        "SHA2": _wrap(core_SHA2),
        "SHA3": _wrap(core_SHA3),
        "SIGABA": _wrap(core_SIGABA),
        "SM3": _wrap(core_SM3),
        "SM4Decrypt": _wrap(core_SM4Decrypt),
        "SM4Encrypt": _wrap(core_SM4Encrypt),
        "SQLBeautify": _wrap(core_SQLBeautify),
        "SQLMinify": _wrap(core_SQLMinify),
        "SSDEEP": _wrap(core_SSDEEP),
        "SUB": _wrap(core_SUB),
        "scanForEmbeddedFiles": _wrap(core_ScanForEmbeddedFiles),
        "scatterChart": _wrap(core_ScatterChart),
        "scrypt": _wrap(core_Scrypt),
        "seriesChart": _wrap(core_SeriesChart),
        "setDifference": _wrap(core_SetDifference),
        "setIntersection": _wrap(core_SetIntersection),
        "setUnion": _wrap(core_SetUnion),
        "shake": _wrap(core_Shake),
        "sharpenImage": _wrap(core_SharpenImage),
        "showBase64Offsets": _wrap(core_ShowBase64Offsets),
        "showOnMap": _wrap(core_ShowOnMap),
        "shuffle": _wrap(core_Shuffle),
        "sleep": _wrap(core_Sleep),
        "snefru": _wrap(core_Snefru),
        "sort": _wrap(core_Sort),
        "split": _wrap(core_Split),
        "splitColourChannels": _wrap(core_SplitColourChannels),
        "standardDeviation": _wrap(core_StandardDeviation),
        "streebog": _wrap(core_Streebog),
        "strings": _wrap(core_Strings),
        "stripHTMLTags": _wrap(core_StripHTMLTags),
        "stripHTTPHeaders": _wrap(core_StripHTTPHeaders),
        "subsection": _wrap(core_Subsection),
        "substitute": _wrap(core_Substitute),
        "subtract": _wrap(core_Subtract),
        "sum": _wrap(core_Sum),
        "swapCase": _wrap(core_SwapCase),
        "swapEndianness": _wrap(core_SwapEndianness),
        "symmetricDifference": _wrap(core_SymmetricDifference),
        "TCPIPChecksum": _wrap(core_TCPIPChecksum),
        "tail": _wrap(core_Tail),
        "takeBytes": _wrap(core_TakeBytes),
        "tar": _wrap(core_Tar),
        "textEncodingBruteForce": _wrap(core_TextEncodingBruteForce),
        "toBCD": _wrap(core_ToBCD),
        "toBase": _wrap(core_ToBase),
        "toBase32": _wrap(core_ToBase32),
        "toBase45": _wrap(core_ToBase45),
        "toBase58": _wrap(core_ToBase58),
        "toBase62": _wrap(core_ToBase62),
        "toBase64": _wrap(core_ToBase64),
        "toBase85": _wrap(core_ToBase85),
        "toBinary": _wrap(core_ToBinary),
        "toBraille": _wrap(core_ToBraille),
        "toCamelCase": _wrap(core_ToCamelCase),
        "toCaseInsensitiveRegex": _wrap(core_ToCaseInsensitiveRegex),
        "toCharcode": _wrap(core_ToCharcode),
        "toDecimal": _wrap(core_ToDecimal),
        "toHTMLEntity": _wrap(core_ToHTMLEntity),
        "toHex": _wrap(core_ToHex),
        "toHexContent": _wrap(core_ToHexContent),
        "toHexdump": _wrap(core_ToHexdump),
        "toKebabCase": _wrap(core_ToKebabCase),
        "toLowerCase": _wrap(core_ToLowerCase),
        "toMessagePack": _wrap(core_ToMessagePack),
        "toMorseCode": _wrap(core_ToMorseCode),
        "toOctal": _wrap(core_ToOctal),
        "toPunycode": _wrap(core_ToPunycode),
        "toQuotedPrintable": _wrap(core_ToQuotedPrintable),
        "toSnakeCase": _wrap(core_ToSnakeCase),
        "toTable": _wrap(core_ToTable),
        "toUNIXTimestamp": _wrap(core_ToUNIXTimestamp),
        "toUpperCase": _wrap(core_ToUpperCase),
        "translateDateTimeFormat": _wrap(core_TranslateDateTimeFormat),
        "tripleDESDecrypt": _wrap(core_TripleDESDecrypt),
        "tripleDESEncrypt": _wrap(core_TripleDESEncrypt),
        "typex": _wrap(core_Typex),
        "UNIXTimestampToWindowsFiletime": _wrap(core_UNIXTimestampToWindowsFiletime),
        "URLDecode": _wrap(core_URLDecode),
        "URLEncode": _wrap(core_URLEncode),
        "unescapeString": _wrap(core_UnescapeString),
        "unescapeUnicodeCharacters": _wrap(core_UnescapeUnicodeCharacters),
        "unicodeTextFormat": _wrap(core_UnicodeTextFormat),
        "unique": _wrap(core_Unique),
        "untar": _wrap(core_Untar),
        "unzip": _wrap(core_Unzip),
        "varIntDecode": _wrap(core_VarIntDecode),
        "varIntEncode": _wrap(core_VarIntEncode),
        "viewBitPlane": _wrap(core_ViewBitPlane),
        "vigenèreDecode": _wrap(core_VigenèreDecode),
        "vigenèreEncode": _wrap(core_VigenèreEncode),
        "whirlpool": _wrap(core_Whirlpool),
        "windowsFiletimeToUNIXTimestamp": _wrap(core_WindowsFiletimeToUNIXTimestamp),
        "XKCDRandomNumber": _wrap(core_XKCDRandomNumber),
        "XMLBeautify": _wrap(core_XMLBeautify),
        "XMLMinify": _wrap(core_XMLMinify),
        "XOR": _wrap(core_XOR),
        "XORBruteForce": _wrap(core_XORBruteForce),
        "XPathExpression": _wrap(core_XPathExpression),
        "YARARules": _wrap(core_YARARules),
        "zip": _wrap(core_Zip),
        "zlibDeflate": _wrap(core_ZlibDeflate),
        "zlibInflate": _wrap(core_ZlibInflate),
        "fork": _explainExcludedFunction("Fork"),
        "merge": _explainExcludedFunction("Merge"),
        "jump": _explainExcludedFunction("Jump"),
        "conditionalJump": _explainExcludedFunction("ConditionalJump"),
        "label": _explainExcludedFunction("Label"),
        "comment": _explainExcludedFunction("Comment"),
        "javaScriptBeautify": _explainExcludedFunction("JavaScriptBeautify"),
        "javaScriptMinify": _explainExcludedFunction("JavaScriptMinify"),
        "javaScriptParser": _explainExcludedFunction("JavaScriptParser"),
        "syntaxHighlighter": _explainExcludedFunction("SyntaxHighlighter"),
    };
}

const chef = generateChef();
// Add some additional features to chef object.
chef.help = help;
chef.Dish = NodeDish;

// Define consts here so we can add to top-level export - wont allow
// export of chef property.
const A1Z26CipherDecode = chef.A1Z26CipherDecode;
const A1Z26CipherEncode = chef.A1Z26CipherEncode;
const ADD = chef.ADD;
const AESDecrypt = chef.AESDecrypt;
const AESEncrypt = chef.AESEncrypt;
const AESKeyUnwrap = chef.AESKeyUnwrap;
const AESKeyWrap = chef.AESKeyWrap;
const AMFDecode = chef.AMFDecode;
const AMFEncode = chef.AMFEncode;
const AND = chef.AND;
const addLineNumbers = chef.addLineNumbers;
const addTextToImage = chef.addTextToImage;
const adler32Checksum = chef.adler32Checksum;
const affineCipherDecode = chef.affineCipherDecode;
const affineCipherEncode = chef.affineCipherEncode;
const analyseHash = chef.analyseHash;
const argon2 = chef.argon2;
const argon2Compare = chef.argon2Compare;
const atbashCipher = chef.atbashCipher;
const avroToJSON = chef.avroToJSON;
const BLAKE2b = chef.BLAKE2b;
const BLAKE2s = chef.BLAKE2s;
const BSONDeserialise = chef.BSONDeserialise;
const BSONSerialise = chef.BSONSerialise;
const baconCipherDecode = chef.baconCipherDecode;
const baconCipherEncode = chef.baconCipherEncode;
const bcrypt = chef.bcrypt;
const bcryptCompare = chef.bcryptCompare;
const bcryptParse = chef.bcryptParse;
const bifidCipherDecode = chef.bifidCipherDecode;
const bifidCipherEncode = chef.bifidCipherEncode;
const bitShiftLeft = chef.bitShiftLeft;
const bitShiftRight = chef.bitShiftRight;
const blowfishDecrypt = chef.blowfishDecrypt;
const blowfishEncrypt = chef.blowfishEncrypt;
const blurImage = chef.blurImage;
const bombe = chef.bombe;
const bzip2Compress = chef.bzip2Compress;
const bzip2Decompress = chef.bzip2Decompress;
const CBORDecode = chef.CBORDecode;
const CBOREncode = chef.CBOREncode;
const CMAC = chef.CMAC;
const CRC16Checksum = chef.CRC16Checksum;
const CRC32Checksum = chef.CRC32Checksum;
const CRC8Checksum = chef.CRC8Checksum;
const CSSBeautify = chef.CSSBeautify;
const CSSMinify = chef.CSSMinify;
const CSSSelector = chef.CSSSelector;
const CSVToJSON = chef.CSVToJSON;
const CTPH = chef.CTPH;
const caesarBoxCipher = chef.caesarBoxCipher;
const cartesianProduct = chef.cartesianProduct;
const cetaceanCipherDecode = chef.cetaceanCipherDecode;
const cetaceanCipherEncode = chef.cetaceanCipherEncode;
const chaCha = chef.chaCha;
const changeIPFormat = chef.changeIPFormat;
const chiSquare = chef.chiSquare;
const cipherSaber2Decrypt = chef.cipherSaber2Decrypt;
const cipherSaber2Encrypt = chef.cipherSaber2Encrypt;
const citrixCTX1Decode = chef.citrixCTX1Decode;
const citrixCTX1Encode = chef.citrixCTX1Encode;
const colossus = chef.colossus;
const comment = chef.comment;
const compareCTPHHashes = chef.compareCTPHHashes;
const compareSSDEEPHashes = chef.compareSSDEEPHashes;
const conditionalJump = chef.conditionalJump;
const containImage = chef.containImage;
const convertArea = chef.convertArea;
const convertCoordinateFormat = chef.convertCoordinateFormat;
const convertDataUnits = chef.convertDataUnits;
const convertDistance = chef.convertDistance;
const convertImageFormat = chef.convertImageFormat;
const convertMass = chef.convertMass;
const convertSpeed = chef.convertSpeed;
const convertToNATOAlphabet = chef.convertToNATOAlphabet;
const countOccurrences = chef.countOccurrences;
const coverImage = chef.coverImage;
const cropImage = chef.cropImage;
const DESDecrypt = chef.DESDecrypt;
const DESEncrypt = chef.DESEncrypt;
const DNSOverHTTPS = chef.DNSOverHTTPS;
const dechunkHTTPResponse = chef.dechunkHTTPResponse;
const decodeNetBIOSName = chef.decodeNetBIOSName;
const decodeText = chef.decodeText;
const defangIPAddresses = chef.defangIPAddresses;
const defangURL = chef.defangURL;
const deriveEVPKey = chef.deriveEVPKey;
const deriveHKDFKey = chef.deriveHKDFKey;
const derivePBKDF2Key = chef.derivePBKDF2Key;
const detectFileType = chef.detectFileType;
const diff = chef.diff;
const disassembleX86 = chef.disassembleX86;
const ditherImage = chef.ditherImage;
const divide = chef.divide;
const dropBytes = chef.dropBytes;
const ELFInfo = chef.ELFInfo;
const encodeNetBIOSName = chef.encodeNetBIOSName;
const encodeText = chef.encodeText;
const enigma = chef.enigma;
const entropy = chef.entropy;
const escapeString = chef.escapeString;
const escapeUnicodeCharacters = chef.escapeUnicodeCharacters;
const expandAlphabetRange = chef.expandAlphabetRange;
const extractDates = chef.extractDates;
const extractDomains = chef.extractDomains;
const extractEXIF = chef.extractEXIF;
const extractEmailAddresses = chef.extractEmailAddresses;
const extractFilePaths = chef.extractFilePaths;
const extractFiles = chef.extractFiles;
const extractID3 = chef.extractID3;
const extractIPAddresses = chef.extractIPAddresses;
const extractLSB = chef.extractLSB;
const extractMACAddresses = chef.extractMACAddresses;
const extractRGBA = chef.extractRGBA;
const extractURLs = chef.extractURLs;
const filter = chef.filter;
const findReplace = chef.findReplace;
const fletcher16Checksum = chef.fletcher16Checksum;
const fletcher32Checksum = chef.fletcher32Checksum;
const fletcher64Checksum = chef.fletcher64Checksum;
const fletcher8Checksum = chef.fletcher8Checksum;
const flipImage = chef.flipImage;
const fork = chef.fork;
const formatMACAddresses = chef.formatMACAddresses;
const frequencyDistribution = chef.frequencyDistribution;
const fromBCD = chef.fromBCD;
const fromBase = chef.fromBase;
const fromBase32 = chef.fromBase32;
const fromBase45 = chef.fromBase45;
const fromBase58 = chef.fromBase58;
const fromBase62 = chef.fromBase62;
const fromBase64 = chef.fromBase64;
const fromBase85 = chef.fromBase85;
const fromBinary = chef.fromBinary;
const fromBraille = chef.fromBraille;
const fromCaseInsensitiveRegex = chef.fromCaseInsensitiveRegex;
const fromCharcode = chef.fromCharcode;
const fromDecimal = chef.fromDecimal;
const fromHTMLEntity = chef.fromHTMLEntity;
const fromHex = chef.fromHex;
const fromHexContent = chef.fromHexContent;
const fromHexdump = chef.fromHexdump;
const fromMessagePack = chef.fromMessagePack;
const fromMorseCode = chef.fromMorseCode;
const fromOctal = chef.fromOctal;
const fromPunycode = chef.fromPunycode;
const fromQuotedPrintable = chef.fromQuotedPrintable;
const fromUNIXTimestamp = chef.fromUNIXTimestamp;
const fuzzyMatch = chef.fuzzyMatch;
const GOSTHash = chef.GOSTHash;
const generateAllHashes = chef.generateAllHashes;
const generateDeBruijnSequence = chef.generateDeBruijnSequence;
const generateHOTP = chef.generateHOTP;
const generateImage = chef.generateImage;
const generateLoremIpsum = chef.generateLoremIpsum;
const generatePGPKeyPair = chef.generatePGPKeyPair;
const generateQRCode = chef.generateQRCode;
const generateRSAKeyPair = chef.generateRSAKeyPair;
const generateTOTP = chef.generateTOTP;
const generateUUID = chef.generateUUID;
const genericCodeBeautify = chef.genericCodeBeautify;
const getAllCasings = chef.getAllCasings;
const getTime = chef.getTime;
const groupIPAddresses = chef.groupIPAddresses;
const gunzip = chef.gunzip;
const gzip = chef.gzip;
const HAS160 = chef.HAS160;
const HASSHClientFingerprint = chef.HASSHClientFingerprint;
const HASSHServerFingerprint = chef.HASSHServerFingerprint;
const HMAC = chef.HMAC;
const HTMLToText = chef.HTMLToText;
const HTTPRequest = chef.HTTPRequest;
const hammingDistance = chef.hammingDistance;
const haversineDistance = chef.haversineDistance;
const head = chef.head;
const heatmapChart = chef.heatmapChart;
const hexDensityChart = chef.hexDensityChart;
const hexToObjectIdentifier = chef.hexToObjectIdentifier;
const hexToPEM = chef.hexToPEM;
const imageBrightnessContrast = chef.imageBrightnessContrast;
const imageFilter = chef.imageFilter;
const imageHueSaturationLightness = chef.imageHueSaturationLightness;
const imageOpacity = chef.imageOpacity;
const indexOfCoincidence = chef.indexOfCoincidence;
const invertImage = chef.invertImage;
const JA3Fingerprint = chef.JA3Fingerprint;
const JA3SFingerprint = chef.JA3SFingerprint;
const JPathExpression = chef.JPathExpression;
const JSONBeautify = chef.JSONBeautify;
const JSONMinify = chef.JSONMinify;
const JSONToCSV = chef.JSONToCSV;
const JWTDecode = chef.JWTDecode;
const JWTSign = chef.JWTSign;
const JWTVerify = chef.JWTVerify;
const javaScriptBeautify = chef.javaScriptBeautify;
const javaScriptMinify = chef.javaScriptMinify;
const javaScriptParser = chef.javaScriptParser;
const jump = chef.jump;
const keccak = chef.keccak;
const LMHash = chef.LMHash;
const LS47Decrypt = chef.LS47Decrypt;
const LS47Encrypt = chef.LS47Encrypt;
const LZ4Compress = chef.LZ4Compress;
const LZ4Decompress = chef.LZ4Decompress;
const LZMACompress = chef.LZMACompress;
const LZMADecompress = chef.LZMADecompress;
const LZStringCompress = chef.LZStringCompress;
const LZStringDecompress = chef.LZStringDecompress;
const label = chef.label;
const levenshteinDistance = chef.levenshteinDistance;
const lorenz = chef.lorenz;
const luhnChecksum = chef.luhnChecksum;
const MD2 = chef.MD2;
const MD4 = chef.MD4;
const MD5 = chef.MD5;
const MD6 = chef.MD6;
const magic = chef.magic;
const mean = chef.mean;
const median = chef.median;
const merge = chef.merge;
const microsoftScriptDecoder = chef.microsoftScriptDecoder;
const multipleBombe = chef.multipleBombe;
const multiply = chef.multiply;
const NOT = chef.NOT;
const NTHash = chef.NTHash;
const normaliseImage = chef.normaliseImage;
const normaliseUnicode = chef.normaliseUnicode;
const numberwang = chef.numberwang;
const OR = chef.OR;
const objectIdentifierToHex = chef.objectIdentifierToHex;
const offsetChecker = chef.offsetChecker;
const opticalCharacterRecognition = chef.opticalCharacterRecognition;
const PEMToHex = chef.PEMToHex;
const PGPDecrypt = chef.PGPDecrypt;
const PGPDecryptAndVerify = chef.PGPDecryptAndVerify;
const PGPEncrypt = chef.PGPEncrypt;
const PGPEncryptAndSign = chef.PGPEncryptAndSign;
const PGPVerify = chef.PGPVerify;
const PHPDeserialize = chef.PHPDeserialize;
const PLISTViewer = chef.PLISTViewer;
const padLines = chef.padLines;
const parseASN1HexString = chef.parseASN1HexString;
const parseColourCode = chef.parseColourCode;
const parseDateTime = chef.parseDateTime;
const parseIPRange = chef.parseIPRange;
const parseIPv4Header = chef.parseIPv4Header;
const parseIPv6Address = chef.parseIPv6Address;
const parseObjectIDTimestamp = chef.parseObjectIDTimestamp;
const parseQRCode = chef.parseQRCode;
const parseSSHHostKey = chef.parseSSHHostKey;
const parseTCP = chef.parseTCP;
const parseTLV = chef.parseTLV;
const parseUDP = chef.parseUDP;
const parseUNIXFilePermissions = chef.parseUNIXFilePermissions;
const parseURI = chef.parseURI;
const parseUserAgent = chef.parseUserAgent;
const parseX509Certificate = chef.parseX509Certificate;
const playMedia = chef.playMedia;
const powerSet = chef.powerSet;
const protobufDecode = chef.protobufDecode;
const protobufEncode = chef.protobufEncode;
const pseudoRandomNumberGenerator = chef.pseudoRandomNumberGenerator;
const RC2Decrypt = chef.RC2Decrypt;
const RC2Encrypt = chef.RC2Encrypt;
const RC4 = chef.RC4;
const RC4Drop = chef.RC4Drop;
const RIPEMD = chef.RIPEMD;
const ROT13 = chef.ROT13;
const ROT13BruteForce = chef.ROT13BruteForce;
const ROT47 = chef.ROT47;
const ROT47BruteForce = chef.ROT47BruteForce;
const ROT8000 = chef.ROT8000;
const RSADecrypt = chef.RSADecrypt;
const RSAEncrypt = chef.RSAEncrypt;
const RSASign = chef.RSASign;
const RSAVerify = chef.RSAVerify;
const rabbit = chef.rabbit;
const railFenceCipherDecode = chef.railFenceCipherDecode;
const railFenceCipherEncode = chef.railFenceCipherEncode;
const randomizeColourPalette = chef.randomizeColourPalette;
const rawDeflate = chef.rawDeflate;
const rawInflate = chef.rawInflate;
const register = chef.register;
const regularExpression = chef.regularExpression;
const removeDiacritics = chef.removeDiacritics;
const removeEXIF = chef.removeEXIF;
const removeLineNumbers = chef.removeLineNumbers;
const removeNullBytes = chef.removeNullBytes;
const removeWhitespace = chef.removeWhitespace;
const renderImage = chef.renderImage;
const renderMarkdown = chef.renderMarkdown;
const resizeImage = chef.resizeImage;
const Return = chef.Return;
const reverse = chef.reverse;
const rotateImage = chef.rotateImage;
const rotateLeft = chef.rotateLeft;
const rotateRight = chef.rotateRight;
const SHA0 = chef.SHA0;
const SHA1 = chef.SHA1;
const SHA2 = chef.SHA2;
const SHA3 = chef.SHA3;
const SIGABA = chef.SIGABA;
const SM3 = chef.SM3;
const SM4Decrypt = chef.SM4Decrypt;
const SM4Encrypt = chef.SM4Encrypt;
const SQLBeautify = chef.SQLBeautify;
const SQLMinify = chef.SQLMinify;
const SSDEEP = chef.SSDEEP;
const SUB = chef.SUB;
const scanForEmbeddedFiles = chef.scanForEmbeddedFiles;
const scatterChart = chef.scatterChart;
const scrypt = chef.scrypt;
const seriesChart = chef.seriesChart;
const setDifference = chef.setDifference;
const setIntersection = chef.setIntersection;
const setUnion = chef.setUnion;
const shake = chef.shake;
const sharpenImage = chef.sharpenImage;
const showBase64Offsets = chef.showBase64Offsets;
const showOnMap = chef.showOnMap;
const shuffle = chef.shuffle;
const sleep = chef.sleep;
const snefru = chef.snefru;
const sort = chef.sort;
const split = chef.split;
const splitColourChannels = chef.splitColourChannels;
const standardDeviation = chef.standardDeviation;
const streebog = chef.streebog;
const strings = chef.strings;
const stripHTMLTags = chef.stripHTMLTags;
const stripHTTPHeaders = chef.stripHTTPHeaders;
const subsection = chef.subsection;
const substitute = chef.substitute;
const subtract = chef.subtract;
const sum = chef.sum;
const swapCase = chef.swapCase;
const swapEndianness = chef.swapEndianness;
const symmetricDifference = chef.symmetricDifference;
const syntaxHighlighter = chef.syntaxHighlighter;
const TCPIPChecksum = chef.TCPIPChecksum;
const tail = chef.tail;
const takeBytes = chef.takeBytes;
const tar = chef.tar;
const textEncodingBruteForce = chef.textEncodingBruteForce;
const toBCD = chef.toBCD;
const toBase = chef.toBase;
const toBase32 = chef.toBase32;
const toBase45 = chef.toBase45;
const toBase58 = chef.toBase58;
const toBase62 = chef.toBase62;
const toBase64 = chef.toBase64;
const toBase85 = chef.toBase85;
const toBinary = chef.toBinary;
const toBraille = chef.toBraille;
const toCamelCase = chef.toCamelCase;
const toCaseInsensitiveRegex = chef.toCaseInsensitiveRegex;
const toCharcode = chef.toCharcode;
const toDecimal = chef.toDecimal;
const toHTMLEntity = chef.toHTMLEntity;
const toHex = chef.toHex;
const toHexContent = chef.toHexContent;
const toHexdump = chef.toHexdump;
const toKebabCase = chef.toKebabCase;
const toLowerCase = chef.toLowerCase;
const toMessagePack = chef.toMessagePack;
const toMorseCode = chef.toMorseCode;
const toOctal = chef.toOctal;
const toPunycode = chef.toPunycode;
const toQuotedPrintable = chef.toQuotedPrintable;
const toSnakeCase = chef.toSnakeCase;
const toTable = chef.toTable;
const toUNIXTimestamp = chef.toUNIXTimestamp;
const toUpperCase = chef.toUpperCase;
const translateDateTimeFormat = chef.translateDateTimeFormat;
const tripleDESDecrypt = chef.tripleDESDecrypt;
const tripleDESEncrypt = chef.tripleDESEncrypt;
const typex = chef.typex;
const UNIXTimestampToWindowsFiletime = chef.UNIXTimestampToWindowsFiletime;
const URLDecode = chef.URLDecode;
const URLEncode = chef.URLEncode;
const unescapeString = chef.unescapeString;
const unescapeUnicodeCharacters = chef.unescapeUnicodeCharacters;
const unicodeTextFormat = chef.unicodeTextFormat;
const unique = chef.unique;
const untar = chef.untar;
const unzip = chef.unzip;
const varIntDecode = chef.varIntDecode;
const varIntEncode = chef.varIntEncode;
const viewBitPlane = chef.viewBitPlane;
const vigenèreDecode = chef.vigenèreDecode;
const vigenèreEncode = chef.vigenèreEncode;
const whirlpool = chef.whirlpool;
const windowsFiletimeToUNIXTimestamp = chef.windowsFiletimeToUNIXTimestamp;
const XKCDRandomNumber = chef.XKCDRandomNumber;
const XMLBeautify = chef.XMLBeautify;
const XMLMinify = chef.XMLMinify;
const XOR = chef.XOR;
const XORBruteForce = chef.XORBruteForce;
const XPathExpression = chef.XPathExpression;
const YARARules = chef.YARARules;
const zip = chef.zip;
const zlibDeflate = chef.zlibDeflate;
const zlibInflate = chef.zlibInflate;


// Define array of all operations to create register for bake.
const operations = [
    A1Z26CipherDecode,
    A1Z26CipherEncode,
    ADD,
    AESDecrypt,
    AESEncrypt,
    AESKeyUnwrap,
    AESKeyWrap,
    AMFDecode,
    AMFEncode,
    AND,
    addLineNumbers,
    addTextToImage,
    adler32Checksum,
    affineCipherDecode,
    affineCipherEncode,
    analyseHash,
    argon2,
    argon2Compare,
    atbashCipher,
    avroToJSON,
    BLAKE2b,
    BLAKE2s,
    BSONDeserialise,
    BSONSerialise,
    baconCipherDecode,
    baconCipherEncode,
    bcrypt,
    bcryptCompare,
    bcryptParse,
    bifidCipherDecode,
    bifidCipherEncode,
    bitShiftLeft,
    bitShiftRight,
    blowfishDecrypt,
    blowfishEncrypt,
    blurImage,
    bombe,
    bzip2Compress,
    bzip2Decompress,
    CBORDecode,
    CBOREncode,
    CMAC,
    CRC16Checksum,
    CRC32Checksum,
    CRC8Checksum,
    CSSBeautify,
    CSSMinify,
    CSSSelector,
    CSVToJSON,
    CTPH,
    caesarBoxCipher,
    cartesianProduct,
    cetaceanCipherDecode,
    cetaceanCipherEncode,
    chaCha,
    changeIPFormat,
    chiSquare,
    cipherSaber2Decrypt,
    cipherSaber2Encrypt,
    citrixCTX1Decode,
    citrixCTX1Encode,
    colossus,
    comment,
    compareCTPHHashes,
    compareSSDEEPHashes,
    conditionalJump,
    containImage,
    convertArea,
    convertCoordinateFormat,
    convertDataUnits,
    convertDistance,
    convertImageFormat,
    convertMass,
    convertSpeed,
    convertToNATOAlphabet,
    countOccurrences,
    coverImage,
    cropImage,
    DESDecrypt,
    DESEncrypt,
    DNSOverHTTPS,
    dechunkHTTPResponse,
    decodeNetBIOSName,
    decodeText,
    defangIPAddresses,
    defangURL,
    deriveEVPKey,
    deriveHKDFKey,
    derivePBKDF2Key,
    detectFileType,
    diff,
    disassembleX86,
    ditherImage,
    divide,
    dropBytes,
    ELFInfo,
    encodeNetBIOSName,
    encodeText,
    enigma,
    entropy,
    escapeString,
    escapeUnicodeCharacters,
    expandAlphabetRange,
    extractDates,
    extractDomains,
    extractEXIF,
    extractEmailAddresses,
    extractFilePaths,
    extractFiles,
    extractID3,
    extractIPAddresses,
    extractLSB,
    extractMACAddresses,
    extractRGBA,
    extractURLs,
    filter,
    findReplace,
    fletcher16Checksum,
    fletcher32Checksum,
    fletcher64Checksum,
    fletcher8Checksum,
    flipImage,
    fork,
    formatMACAddresses,
    frequencyDistribution,
    fromBCD,
    fromBase,
    fromBase32,
    fromBase45,
    fromBase58,
    fromBase62,
    fromBase64,
    fromBase85,
    fromBinary,
    fromBraille,
    fromCaseInsensitiveRegex,
    fromCharcode,
    fromDecimal,
    fromHTMLEntity,
    fromHex,
    fromHexContent,
    fromHexdump,
    fromMessagePack,
    fromMorseCode,
    fromOctal,
    fromPunycode,
    fromQuotedPrintable,
    fromUNIXTimestamp,
    fuzzyMatch,
    GOSTHash,
    generateAllHashes,
    generateDeBruijnSequence,
    generateHOTP,
    generateImage,
    generateLoremIpsum,
    generatePGPKeyPair,
    generateQRCode,
    generateRSAKeyPair,
    generateTOTP,
    generateUUID,
    genericCodeBeautify,
    getAllCasings,
    getTime,
    groupIPAddresses,
    gunzip,
    gzip,
    HAS160,
    HASSHClientFingerprint,
    HASSHServerFingerprint,
    HMAC,
    HTMLToText,
    HTTPRequest,
    hammingDistance,
    haversineDistance,
    head,
    heatmapChart,
    hexDensityChart,
    hexToObjectIdentifier,
    hexToPEM,
    imageBrightnessContrast,
    imageFilter,
    imageHueSaturationLightness,
    imageOpacity,
    indexOfCoincidence,
    invertImage,
    JA3Fingerprint,
    JA3SFingerprint,
    JPathExpression,
    JSONBeautify,
    JSONMinify,
    JSONToCSV,
    JWTDecode,
    JWTSign,
    JWTVerify,
    javaScriptBeautify,
    javaScriptMinify,
    javaScriptParser,
    jump,
    keccak,
    LMHash,
    LS47Decrypt,
    LS47Encrypt,
    LZ4Compress,
    LZ4Decompress,
    LZMACompress,
    LZMADecompress,
    LZStringCompress,
    LZStringDecompress,
    label,
    levenshteinDistance,
    lorenz,
    luhnChecksum,
    MD2,
    MD4,
    MD5,
    MD6,
    magic,
    mean,
    median,
    merge,
    microsoftScriptDecoder,
    multipleBombe,
    multiply,
    NOT,
    NTHash,
    normaliseImage,
    normaliseUnicode,
    numberwang,
    OR,
    objectIdentifierToHex,
    offsetChecker,
    opticalCharacterRecognition,
    PEMToHex,
    PGPDecrypt,
    PGPDecryptAndVerify,
    PGPEncrypt,
    PGPEncryptAndSign,
    PGPVerify,
    PHPDeserialize,
    PLISTViewer,
    padLines,
    parseASN1HexString,
    parseColourCode,
    parseDateTime,
    parseIPRange,
    parseIPv4Header,
    parseIPv6Address,
    parseObjectIDTimestamp,
    parseQRCode,
    parseSSHHostKey,
    parseTCP,
    parseTLV,
    parseUDP,
    parseUNIXFilePermissions,
    parseURI,
    parseUserAgent,
    parseX509Certificate,
    playMedia,
    powerSet,
    protobufDecode,
    protobufEncode,
    pseudoRandomNumberGenerator,
    RC2Decrypt,
    RC2Encrypt,
    RC4,
    RC4Drop,
    RIPEMD,
    ROT13,
    ROT13BruteForce,
    ROT47,
    ROT47BruteForce,
    ROT8000,
    RSADecrypt,
    RSAEncrypt,
    RSASign,
    RSAVerify,
    rabbit,
    railFenceCipherDecode,
    railFenceCipherEncode,
    randomizeColourPalette,
    rawDeflate,
    rawInflate,
    register,
    regularExpression,
    removeDiacritics,
    removeEXIF,
    removeLineNumbers,
    removeNullBytes,
    removeWhitespace,
    renderImage,
    renderMarkdown,
    resizeImage,
    Return,
    reverse,
    rotateImage,
    rotateLeft,
    rotateRight,
    SHA0,
    SHA1,
    SHA2,
    SHA3,
    SIGABA,
    SM3,
    SM4Decrypt,
    SM4Encrypt,
    SQLBeautify,
    SQLMinify,
    SSDEEP,
    SUB,
    scanForEmbeddedFiles,
    scatterChart,
    scrypt,
    seriesChart,
    setDifference,
    setIntersection,
    setUnion,
    shake,
    sharpenImage,
    showBase64Offsets,
    showOnMap,
    shuffle,
    sleep,
    snefru,
    sort,
    split,
    splitColourChannels,
    standardDeviation,
    streebog,
    strings,
    stripHTMLTags,
    stripHTTPHeaders,
    subsection,
    substitute,
    subtract,
    sum,
    swapCase,
    swapEndianness,
    symmetricDifference,
    syntaxHighlighter,
    TCPIPChecksum,
    tail,
    takeBytes,
    tar,
    textEncodingBruteForce,
    toBCD,
    toBase,
    toBase32,
    toBase45,
    toBase58,
    toBase62,
    toBase64,
    toBase85,
    toBinary,
    toBraille,
    toCamelCase,
    toCaseInsensitiveRegex,
    toCharcode,
    toDecimal,
    toHTMLEntity,
    toHex,
    toHexContent,
    toHexdump,
    toKebabCase,
    toLowerCase,
    toMessagePack,
    toMorseCode,
    toOctal,
    toPunycode,
    toQuotedPrintable,
    toSnakeCase,
    toTable,
    toUNIXTimestamp,
    toUpperCase,
    translateDateTimeFormat,
    tripleDESDecrypt,
    tripleDESEncrypt,
    typex,
    UNIXTimestampToWindowsFiletime,
    URLDecode,
    URLEncode,
    unescapeString,
    unescapeUnicodeCharacters,
    unicodeTextFormat,
    unique,
    untar,
    unzip,
    varIntDecode,
    varIntEncode,
    viewBitPlane,
    vigenèreDecode,
    vigenèreEncode,
    whirlpool,
    windowsFiletimeToUNIXTimestamp,
    XKCDRandomNumber,
    XMLBeautify,
    XMLMinify,
    XOR,
    XORBruteForce,
    XPathExpression,
    YARARules,
    zip,
    zlibDeflate,
    zlibInflate,
];

chef.bake = bake;
module.exports = chef;

// Operations as top level exports.
const _operations = {
    operations,
    A1Z26CipherDecode,
    A1Z26CipherEncode,
    ADD,
    AESDecrypt,
    AESEncrypt,
    AESKeyUnwrap,
    AESKeyWrap,
    AMFDecode,
    AMFEncode,
    AND,
    addLineNumbers,
    addTextToImage,
    adler32Checksum,
    affineCipherDecode,
    affineCipherEncode,
    analyseHash,
    argon2,
    argon2Compare,
    atbashCipher,
    avroToJSON,
    BLAKE2b,
    BLAKE2s,
    BSONDeserialise,
    BSONSerialise,
    baconCipherDecode,
    baconCipherEncode,
    bcrypt,
    bcryptCompare,
    bcryptParse,
    bifidCipherDecode,
    bifidCipherEncode,
    bitShiftLeft,
    bitShiftRight,
    blowfishDecrypt,
    blowfishEncrypt,
    blurImage,
    bombe,
    bzip2Compress,
    bzip2Decompress,
    CBORDecode,
    CBOREncode,
    CMAC,
    CRC16Checksum,
    CRC32Checksum,
    CRC8Checksum,
    CSSBeautify,
    CSSMinify,
    CSSSelector,
    CSVToJSON,
    CTPH,
    caesarBoxCipher,
    cartesianProduct,
    cetaceanCipherDecode,
    cetaceanCipherEncode,
    chaCha,
    changeIPFormat,
    chiSquare,
    cipherSaber2Decrypt,
    cipherSaber2Encrypt,
    citrixCTX1Decode,
    citrixCTX1Encode,
    colossus,
    comment,
    compareCTPHHashes,
    compareSSDEEPHashes,
    conditionalJump,
    containImage,
    convertArea,
    convertCoordinateFormat,
    convertDataUnits,
    convertDistance,
    convertImageFormat,
    convertMass,
    convertSpeed,
    convertToNATOAlphabet,
    countOccurrences,
    coverImage,
    cropImage,
    DESDecrypt,
    DESEncrypt,
    DNSOverHTTPS,
    dechunkHTTPResponse,
    decodeNetBIOSName,
    decodeText,
    defangIPAddresses,
    defangURL,
    deriveEVPKey,
    deriveHKDFKey,
    derivePBKDF2Key,
    detectFileType,
    diff,
    disassembleX86,
    ditherImage,
    divide,
    dropBytes,
    ELFInfo,
    encodeNetBIOSName,
    encodeText,
    enigma,
    entropy,
    escapeString,
    escapeUnicodeCharacters,
    expandAlphabetRange,
    extractDates,
    extractDomains,
    extractEXIF,
    extractEmailAddresses,
    extractFilePaths,
    extractFiles,
    extractID3,
    extractIPAddresses,
    extractLSB,
    extractMACAddresses,
    extractRGBA,
    extractURLs,
    filter,
    findReplace,
    fletcher16Checksum,
    fletcher32Checksum,
    fletcher64Checksum,
    fletcher8Checksum,
    flipImage,
    fork,
    formatMACAddresses,
    frequencyDistribution,
    fromBCD,
    fromBase,
    fromBase32,
    fromBase45,
    fromBase58,
    fromBase62,
    fromBase64,
    fromBase85,
    fromBinary,
    fromBraille,
    fromCaseInsensitiveRegex,
    fromCharcode,
    fromDecimal,
    fromHTMLEntity,
    fromHex,
    fromHexContent,
    fromHexdump,
    fromMessagePack,
    fromMorseCode,
    fromOctal,
    fromPunycode,
    fromQuotedPrintable,
    fromUNIXTimestamp,
    fuzzyMatch,
    GOSTHash,
    generateAllHashes,
    generateDeBruijnSequence,
    generateHOTP,
    generateImage,
    generateLoremIpsum,
    generatePGPKeyPair,
    generateQRCode,
    generateRSAKeyPair,
    generateTOTP,
    generateUUID,
    genericCodeBeautify,
    getAllCasings,
    getTime,
    groupIPAddresses,
    gunzip,
    gzip,
    HAS160,
    HASSHClientFingerprint,
    HASSHServerFingerprint,
    HMAC,
    HTMLToText,
    HTTPRequest,
    hammingDistance,
    haversineDistance,
    head,
    heatmapChart,
    hexDensityChart,
    hexToObjectIdentifier,
    hexToPEM,
    imageBrightnessContrast,
    imageFilter,
    imageHueSaturationLightness,
    imageOpacity,
    indexOfCoincidence,
    invertImage,
    JA3Fingerprint,
    JA3SFingerprint,
    JPathExpression,
    JSONBeautify,
    JSONMinify,
    JSONToCSV,
    JWTDecode,
    JWTSign,
    JWTVerify,
    javaScriptBeautify,
    javaScriptMinify,
    javaScriptParser,
    jump,
    keccak,
    LMHash,
    LS47Decrypt,
    LS47Encrypt,
    LZ4Compress,
    LZ4Decompress,
    LZMACompress,
    LZMADecompress,
    LZStringCompress,
    LZStringDecompress,
    label,
    levenshteinDistance,
    lorenz,
    luhnChecksum,
    MD2,
    MD4,
    MD5,
    MD6,
    magic,
    mean,
    median,
    merge,
    microsoftScriptDecoder,
    multipleBombe,
    multiply,
    NOT,
    NTHash,
    normaliseImage,
    normaliseUnicode,
    numberwang,
    OR,
    objectIdentifierToHex,
    offsetChecker,
    opticalCharacterRecognition,
    PEMToHex,
    PGPDecrypt,
    PGPDecryptAndVerify,
    PGPEncrypt,
    PGPEncryptAndSign,
    PGPVerify,
    PHPDeserialize,
    PLISTViewer,
    padLines,
    parseASN1HexString,
    parseColourCode,
    parseDateTime,
    parseIPRange,
    parseIPv4Header,
    parseIPv6Address,
    parseObjectIDTimestamp,
    parseQRCode,
    parseSSHHostKey,
    parseTCP,
    parseTLV,
    parseUDP,
    parseUNIXFilePermissions,
    parseURI,
    parseUserAgent,
    parseX509Certificate,
    playMedia,
    powerSet,
    protobufDecode,
    protobufEncode,
    pseudoRandomNumberGenerator,
    RC2Decrypt,
    RC2Encrypt,
    RC4,
    RC4Drop,
    RIPEMD,
    ROT13,
    ROT13BruteForce,
    ROT47,
    ROT47BruteForce,
    ROT8000,
    RSADecrypt,
    RSAEncrypt,
    RSASign,
    RSAVerify,
    rabbit,
    railFenceCipherDecode,
    railFenceCipherEncode,
    randomizeColourPalette,
    rawDeflate,
    rawInflate,
    register,
    regularExpression,
    removeDiacritics,
    removeEXIF,
    removeLineNumbers,
    removeNullBytes,
    removeWhitespace,
    renderImage,
    renderMarkdown,
    resizeImage,
    Return,
    reverse,
    rotateImage,
    rotateLeft,
    rotateRight,
    SHA0,
    SHA1,
    SHA2,
    SHA3,
    SIGABA,
    SM3,
    SM4Decrypt,
    SM4Encrypt,
    SQLBeautify,
    SQLMinify,
    SSDEEP,
    SUB,
    scanForEmbeddedFiles,
    scatterChart,
    scrypt,
    seriesChart,
    setDifference,
    setIntersection,
    setUnion,
    shake,
    sharpenImage,
    showBase64Offsets,
    showOnMap,
    shuffle,
    sleep,
    snefru,
    sort,
    split,
    splitColourChannels,
    standardDeviation,
    streebog,
    strings,
    stripHTMLTags,
    stripHTTPHeaders,
    subsection,
    substitute,
    subtract,
    sum,
    swapCase,
    swapEndianness,
    symmetricDifference,
    syntaxHighlighter,
    TCPIPChecksum,
    tail,
    takeBytes,
    tar,
    textEncodingBruteForce,
    toBCD,
    toBase,
    toBase32,
    toBase45,
    toBase58,
    toBase62,
    toBase64,
    toBase85,
    toBinary,
    toBraille,
    toCamelCase,
    toCaseInsensitiveRegex,
    toCharcode,
    toDecimal,
    toHTMLEntity,
    toHex,
    toHexContent,
    toHexdump,
    toKebabCase,
    toLowerCase,
    toMessagePack,
    toMorseCode,
    toOctal,
    toPunycode,
    toQuotedPrintable,
    toSnakeCase,
    toTable,
    toUNIXTimestamp,
    toUpperCase,
    translateDateTimeFormat,
    tripleDESDecrypt,
    tripleDESEncrypt,
    typex,
    UNIXTimestampToWindowsFiletime,
    URLDecode,
    URLEncode,
    unescapeString,
    unescapeUnicodeCharacters,
    unicodeTextFormat,
    unique,
    untar,
    unzip,
    varIntDecode,
    varIntEncode,
    viewBitPlane,
    vigenèreDecode,
    vigenèreEncode,
    whirlpool,
    windowsFiletimeToUNIXTimestamp,
    XKCDRandomNumber,
    XMLBeautify,
    XMLMinify,
    XOR,
    XORBruteForce,
    XPathExpression,
    YARARules,
    zip,
    zlibDeflate,
    zlibInflate,
    Dish: NodeDish,
    bake,
    help,
    OperationError,
    ExcludedOperationError,
    DishError
};

exports.operations = _operations;
